# Setup a cache to cache job parts between jobs to ensure faster builds
cache:
    key: "$CI_JOB_NAME"
    untracked: true
    paths:
    - $HOME/.cargo/
    - target/

# Set any required environment variables here
variables:
  RUST_BACKTRACE: "FULL"
  GIT_SUBMODULE_STRATEGY: recursive

image: rust:latest

stages:
  - install
  - test
  - deploy

install:
  stage: install
  script:
    # triggering installation
    - rustc --version

check:
  stage: test
  before_script:
    - rustup component add rustfmt clippy
    - cargo install cargo-audit
    # Install dependencies to build
    # `clang` is necessary for `setjmp`
    - apt-get update -qy
    - apt-get install -y build-essential clang
  script:
    - cargo check --verbose
    - cargo fmt -- --check
    - cargo clippy -p hp-sharp -- -D warnings
    - cargo test -- --nocapture
    - cargo audit

debug:
  stage: test
  before_script:
    # Install dependencies to build
    # `clang` is necessary for `setjmp`
    - apt-get update -qy
    - apt-get install -y build-essential clang
  script:
    - cargo test
    - cargo build

release:
  stage: test
  before_script:
    # Install dependencies to build
    # `clang` is necessary for `setjmp`
    - apt-get update -qy
    - apt-get install -y build-essential clang
  script:
    - cargo test --release
    - cargo build --release

pages:
  stage: deploy
  script:
    - cargo doc
    - mkdir -p public && cp -r target/doc/* public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
